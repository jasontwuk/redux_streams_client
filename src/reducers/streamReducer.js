import _ from "lowdash";
import {
  FETCH_STREAMS,
  FETCH_STREAM,
  CREATE_STREAM,
  EDIT_STREAM,
  DELETE_STREAM,
} from "../actions/types";

export default (state = {}, action) => {
  switch (action.type) {
    case FETCH_STREAMS:
      // *** _.mapKeys(): creates an object with the same values as object and keys generated by running each own enumerable string keyed property of object
      // *** we use the "..." in front of _.mapKeys() to take out all the key-value pairs that are inside of the big object that returned by _.mapKeys()
      return { ...state, ..._.mapKeys(action.payload, "id") };
    case FETCH_STREAM:
      return { ...state, [action.payload.id]: action.payload };
    case CREATE_STREAM:
      return { ...state, [action.payload.id]: action.payload };
    case EDIT_STREAM:
      return { ...state, [action.payload.id]: action.payload };
    case DELETE_STREAM:
      // *** The second argument is action.payload (instead of action.payload.id). It is because we dispatch "payload: id" in actions/index.js deleteStream()
      // *** _.omit() will delete the selected stream then create a new object
      return _.omit(state, action.payload);

    default:
      return state;
  }
};
